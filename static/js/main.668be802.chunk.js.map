{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","memo","to","text","className","isActive","cn","Navbar","App","role","HomePage","Loader","PersonLink","person","slug","sex","name","PersonItem","props","people","useParams","selectedUser","findParent","parent","find","human","born","died","motherName","fatherName","PeopleTable","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","isLoadingFinish","setIsLoadingFinish","loadPeople","loadedPeople","useEffect","isNoPeopleOnServer","useMemo","length","isPeopleOnServer","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.668be802.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport cn from 'classnames';\n\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n));\n","import React, { memo } from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navbar: React.FC = memo(() => (\n  <div className=\"navbar-brand\">\n    <PageNavLink to=\"/\" text=\"Home\" />\n    <PageNavLink to=\"/people\" text=\"People\" />\n  </div>\n));\n","import React from 'react';\n\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <Navbar />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React, { memo } from 'react';\n\nexport const HomePage: React.FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n));\n","import React, { memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n  person: Person;\n};\n\nexport const PersonItem: React.FC<Props> = memo((props) => {\n  const { person, people } = props;\n\n  const { selectedUser = '' } = useParams();\n\n  const findParent = (name: string) => {\n    const parent = people.find(human => human.name === name);\n\n    return parent\n      ? <PersonLink person={parent} />\n      : name;\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn(\n        { 'has-background-warning': selectedUser === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.motherName\n          ? findParent(person.motherName)\n          : '-'}\n      </td>\n\n      <td>\n        {person.fatherName\n          ? findParent(person.fatherName)\n          : '-'}\n      </td>\n    </tr>\n  );\n});\n","import React, { memo } from 'react';\n\nimport { Person } from '../../types/Person';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = memo(({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PersonItem\n          key={person.slug}\n          person={person}\n          people={people}\n        />\n      ))}\n    </tbody>\n  </table>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, {\n  useState,\n  useEffect,\n  memo,\n  useMemo,\n} from 'react';\n\nimport { Loader } from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isLoadingFinish, setIsLoadingFinish] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n      setIsLoadingFinish(true);\n    }\n  };\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoadingFinish(false);\n    loadPeople();\n  }, []);\n\n  const isNoPeopleOnServer = useMemo(() => (\n    isLoadingFinish && !isError && !people.length\n  ), [isLoadingFinish, isError, people]);\n\n  const isPeopleOnServer = useMemo(() => (\n    isLoadingFinish && !isError && people.length\n  ), [isLoadingFinish, isError, people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import React, { memo } from 'react';\n\nexport const NotFoundPage: React.FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n\n          <Route\n            index\n            element={<HomePage />}\n          />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":selectedUser\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}